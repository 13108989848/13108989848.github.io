<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Linux 常用命令大全</title>
      <link href="/zh-Hans/2018-06-07-linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8.html"/>
      <url>/zh-Hans/2018-06-07-linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8.html</url>
      <content type="html"><![CDATA[<p>#系统信息<br><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">arch 显示机器的处理器架构(<span class="number">1</span>) </span><br><span class="line">uname -m 显示机器的处理器架构(<span class="number">2</span>) </span><br><span class="line">uname -r 显示正在使用的内核版本 </span><br><span class="line">dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI) </span><br><span class="line">hdparm -i /dev/hda 罗列一个磁盘的架构特性 </span><br><span class="line">hdparm -tT /dev/sda 在磁盘上执行测试性读取操作 </span><br><span class="line">cat /<span class="keyword">proc</span>/cpuinfo 显示CPU<span class="title"> info的信息</span> </span><br><span class="line">cat /<span class="keyword">proc</span>/interrupts 显示中断 </span><br><span class="line">cat /<span class="keyword">proc</span>/meminfo 校验内存使用 </span><br><span class="line">cat /<span class="keyword">proc</span>/swaps 显示哪些swap被使用 </span><br><span class="line">cat /<span class="keyword">proc</span>/version 显示内核的版本 </span><br><span class="line">cat /<span class="keyword">proc</span>/net/dev 显示网络适配器及统计 </span><br><span class="line">cat /<span class="keyword">proc</span>/mounts 显示已加载的文件系统 </span><br><span class="line">lspci -tv 罗列<span class="title"> PCI</span> 设备 </span><br><span class="line">lsusb -tv 显示<span class="title"> USB</span> 设备 </span><br><span class="line">date 显示系统日期 </span><br><span class="line">cal 2007 显示2007年的日历表 </span><br><span class="line">date 041217002007.00 设置日期和时间 - 月日时分年.秒 </span><br><span class="line">clock -w 将时间修改保存到<span class="title"> BIOS</span></span><br></pre></td></tr></table></figure> </p><hr><p>#关机 (系统的关机、重启以及登出 )<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shutdown</span> <span class="selector-tag">-h</span> <span class="selector-tag">now</span> 关闭系统(<span class="number">1</span>) </span><br><span class="line"><span class="selector-tag">init</span> <span class="selector-tag">0</span> 关闭系统(<span class="number">2</span>) </span><br><span class="line"><span class="selector-tag">telinit</span> <span class="selector-tag">0</span> 关闭系统(<span class="number">3</span>) </span><br><span class="line"><span class="selector-tag">shutdown</span> <span class="selector-tag">-h</span> <span class="selector-tag">hours</span><span class="selector-pseudo">:minutes</span> <span class="selector-tag">&amp;</span> 按预定时间关闭系统 </span><br><span class="line"><span class="selector-tag">shutdown</span> <span class="selector-tag">-c</span> 取消按预定时间关闭系统 </span><br><span class="line"><span class="selector-tag">shutdown</span> <span class="selector-tag">-r</span> <span class="selector-tag">now</span> 重启(<span class="number">1</span>) </span><br><span class="line"><span class="selector-tag">reboot</span> 重启(<span class="number">2</span>) </span><br><span class="line"><span class="selector-tag">logout</span> 注销 </span><br></pre></td></tr></table></figure></p><hr><p>#文件和目录 </p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /home 进入 '/ home' 目录' </span><br><span class="line"><span class="keyword">cd</span> .. 返回上一级目录 </span><br><span class="line"><span class="keyword">cd</span> ../.. 返回上两级目录 </span><br><span class="line"><span class="keyword">cd</span> 进入个人的主目录 </span><br><span class="line"><span class="keyword">cd</span> ~user1 进入个人的主目录 </span><br><span class="line"><span class="keyword">cd</span> - 返回上次所在的目录 </span><br><span class="line"><span class="keyword">pwd</span> 显示工作路径 </span><br><span class="line"><span class="keyword">ls</span> 查看目录中的文件 </span><br><span class="line"><span class="keyword">ls</span> -F 查看目录中的文件 </span><br><span class="line"><span class="keyword">ls</span> -<span class="keyword">l</span> 显示文件和目录的详细资料 </span><br><span class="line"><span class="keyword">ls</span> -a 显示隐藏文件 </span><br><span class="line"><span class="keyword">ls</span> *[0-9]* 显示包含数字的文件名和目录名 </span><br><span class="line">tree 显示文件和目录由根目录开始的树形结构(1) </span><br><span class="line">lstree 显示文件和目录由根目录开始的树形结构(2) </span><br><span class="line"><span class="keyword">mkdir</span> dir1 创建一个叫做 'dir1' 的目录' </span><br><span class="line"><span class="keyword">mkdir</span> dir1 dir2 同时创建两个目录 </span><br><span class="line"><span class="keyword">mkdir</span> -p /tmp/dir1/dir2 创建一个目录树 </span><br><span class="line"><span class="keyword">rm</span> -f file1 删除一个叫做 'file1' 的文件' </span><br><span class="line"><span class="keyword">rmdir</span> dir1 删除一个叫做 'dir1' 的目录' </span><br><span class="line"><span class="keyword">rm</span> -rf dir1 删除一个叫做 'dir1' 的目录并同时删除其内容 </span><br><span class="line"><span class="keyword">rm</span> -rf dir1 dir2 同时删除两个目录及它们的内容 </span><br><span class="line">mv dir1 new_dir 重命名/移动 一个目录 </span><br><span class="line">cp file1 file2 复制一个文件 </span><br><span class="line">cp <span class="keyword">dir</span><span class="comment">/* . 复制一个目录下的所有文件到当前工作目录 </span></span><br><span class="line"><span class="comment">cp -a /tmp/dir1 . 复制一个目录到当前工作目录 </span></span><br><span class="line"><span class="comment">cp -a dir1 dir2 复制一个目录 </span></span><br><span class="line"><span class="comment">ln -s file1 lnk1 创建一个指向文件或目录的软链接 </span></span><br><span class="line"><span class="comment">ln file1 lnk1 创建一个指向文件或目录的物理链接 </span></span><br><span class="line"><span class="comment">touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm) </span></span><br><span class="line"><span class="comment">file file1 outputs the mime type of the file as text </span></span><br><span class="line"><span class="comment">iconv -l 列出已知的编码 </span></span><br><span class="line"><span class="comment">iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding. </span></span><br><span class="line"><span class="comment">find . -maxdepth 1 -name *.jpg -print -exec convert "&#123;&#125;" -resize 80x60 "thumbs/&#123;&#125;" \; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) </span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><hr><p>#文件搜索<br><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> / -<span class="built_in">name</span> file1 从 <span class="string">'/'</span> 开始进入根文件系统搜索文件和目录 </span><br><span class="line"><span class="built_in">find</span> / -user user1 搜索属于用户 <span class="string">'user1'</span> 的文件和目录 </span><br><span class="line"><span class="built_in">find</span> /home/user1 -<span class="built_in">name</span> \*.bin 在目录 <span class="string">'/ home/user1'</span> 中搜索带有<span class="string">'.bin'</span> 结尾的文件 </span><br><span class="line"><span class="built_in">find</span> /usr/bin -<span class="built_in">type</span> f -atime +<span class="number">100</span> 搜索在过去<span class="number">100</span>天内未被使用过的执行文件 </span><br><span class="line"><span class="built_in">find</span> /usr/bin -<span class="built_in">type</span> f -mtime -<span class="number">10</span> 搜索在<span class="number">10</span>天内被创建或者修改过的文件 </span><br><span class="line"><span class="built_in">find</span> / -<span class="built_in">name</span> \*.rpm -<span class="built_in">exec</span> chmod <span class="number">755</span> <span class="string">'&#123;&#125;'</span> \; 搜索以 <span class="string">'.rpm'</span> 结尾的文件并定义其权限 </span><br><span class="line"><span class="built_in">find</span> / -xdev -<span class="built_in">name</span> \*.rpm 搜索以 <span class="string">'.rpm'</span> 结尾的文件，忽略光驱、捷盘等可移动设备 </span><br><span class="line">locate \*.ps 寻找以 <span class="string">'.ps'</span> 结尾的文件 - 先运行 <span class="string">'updatedb'</span> 命令 </span><br><span class="line">whereis <span class="built_in">halt</span> 显示一个二进制文件、源码或man的位置 </span><br><span class="line">which <span class="built_in">halt</span> 显示一个二进制文件或可执行文件的完整路径 </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#挂载一个文件系统 </p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mount <span class="regexp">/dev/</span>hda2 <span class="regexp">/mnt/</span>hda2 挂载一个叫做hda2的盘 - 确定目录 <span class="string">'/ mnt/hda2'</span> 已经存在 </span><br><span class="line">umount <span class="regexp">/dev/</span>hda2 卸载一个叫做hda2的盘 - 先从挂载点 <span class="string">'/ mnt/hda2'</span> 退出 </span><br><span class="line">fuser -km <span class="regexp">/mnt/</span>hda2 当设备繁忙时强制卸载 </span><br><span class="line">umount -n <span class="regexp">/mnt/</span>hda2 运行卸载操作而不写入 <span class="regexp">/etc/m</span>tab 文件- 当文件为只读或当磁盘写满时非常有用 </span><br><span class="line">mount <span class="regexp">/dev/</span>fd0 <span class="regexp">/mnt/</span>floppy 挂载一个软盘 </span><br><span class="line">mount <span class="regexp">/dev/</span>cdrom <span class="regexp">/mnt/</span>cdrom 挂载一个cdrom或dvdrom </span><br><span class="line">mount <span class="regexp">/dev/</span>hdc <span class="regexp">/mnt/</span>cdrecorder 挂载一个cdrw或dvdrom </span><br><span class="line">mount <span class="regexp">/dev/</span>hdb <span class="regexp">/mnt/</span>cdrecorder 挂载一个cdrw或dvdrom </span><br><span class="line">mount -o loop <span class="keyword">file</span>.iso <span class="regexp">/mnt/</span>cdrom 挂载一个文件或ISO镜像文件 </span><br><span class="line">mount -t vfat <span class="regexp">/dev/</span>hda5 <span class="regexp">/mnt/</span>hda5 挂载一个Windows FAT32文件系统 </span><br><span class="line">mount <span class="regexp">/dev/</span>sda1 <span class="regexp">/mnt/u</span>sbdisk 挂载一个usb 捷盘或闪存设备 </span><br><span class="line">mount -t smbfs -o username=user,password=pass <span class="comment">//WinClient/share /mnt/share 挂载一个windows网络共享 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>#磁盘空间<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">df -<span class="keyword">h</span> 显示已经挂载的分区列表 </span><br><span class="line"><span class="keyword">ls</span> -lSr |<span class="keyword">more</span> 以尺寸大小排列文件和目录 </span><br><span class="line">du -<span class="keyword">sh</span> dir1 估算目录 'dir1' 已经使用的磁盘空间' </span><br><span class="line">du -sk * | <span class="keyword">sort</span> -rn 以容量大小为依据依次显示文件和目录的大小 </span><br><span class="line">rpm -q -a --qf '%10&#123;SIZE&#125;t%&#123;NAME&#125;<span class="keyword">n</span>' | <span class="keyword">sort</span> -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统) </span><br><span class="line">dpkg-<span class="keyword">query</span> -W -f='<span class="variable">$&#123;Installed</span>-Size;10&#125;t<span class="variable">$&#123;Package&#125;</span><span class="keyword">n</span>' | <span class="keyword">sort</span> -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统) </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#用户和群组<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">groupadd group_name 创建一个新用户组 </span><br><span class="line">groupdel group_name 删除一个用户组 </span><br><span class="line">groupmod -n new_group_name old_group_name 重命名一个用户组 </span><br><span class="line">useradd -c <span class="string">"Name Surname "</span> -g admin -d <span class="regexp">/home/u</span>ser1 -s <span class="regexp">/bin/</span>bash user1 创建一个属于 <span class="string">"admin"</span> 用户组的用户 </span><br><span class="line">useradd user1 创建一个新用户 </span><br><span class="line">userdel -r user1 删除一个用户 ( <span class="string">'-r'</span> 排除主目录) </span><br><span class="line">usermod -c <span class="string">"User FTP"</span> -g system -d <span class="regexp">/ftp/u</span>ser1 -s <span class="regexp">/bin/</span>nologin user1 修改用户属性 </span><br><span class="line">passwd 修改口令 </span><br><span class="line">passwd user1 修改一个用户的口令 (只允许root执行) </span><br><span class="line">chage -E <span class="number">2005</span>-<span class="number">12</span>-<span class="number">31</span> user1 设置用户口令的失效期限 </span><br><span class="line">pwck 检查 <span class="string">'/etc/passwd'</span> 的文件格式和语法修正以及存在的用户 </span><br><span class="line">grpck 检查 <span class="string">'/etc/passwd'</span> 的文件格式和语法修正以及存在的群组 </span><br><span class="line">newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组 </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#文件的权限</p><h2 id="使用-“-”-设置权限，使用-“-“-用于取消"><a href="#使用-“-”-设置权限，使用-“-“-用于取消" class="headerlink" title="使用 “+” 设置权限，使用 “-“ 用于取消"></a>使用 “+” 设置权限，使用 “-“ 用于取消</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ls -lh 显示权限 </span><br><span class="line">ls /tmp | pr -T5 -W$COLUMNS 将终端划分成<span class="number">5</span>栏显示 </span><br><span class="line"><span class="keyword">chmod</span> ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(<span class="keyword">x</span>)的权限 </span><br><span class="line"><span class="keyword">chmod</span> go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限 </span><br><span class="line"><span class="keyword">chown</span> user1 file1 改变一个文件的所有人属性 </span><br><span class="line"><span class="keyword">chown</span> -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性 </span><br><span class="line">chgrp group1 file1 改变文件的群组 </span><br><span class="line"><span class="keyword">chown</span> user1:group1 file1 改变一个文件的所有人和群组属性 </span><br><span class="line">find / -perm -u+<span class="keyword">s</span> 罗列一个系统中所有使用了SUID控制的文件 </span><br><span class="line"><span class="keyword">chmod</span> u+<span class="keyword">s</span> /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限 </span><br><span class="line"><span class="keyword">chmod</span> u-<span class="keyword">s</span> /bin/file1 禁用一个二进制文件的 SUID位 </span><br><span class="line"><span class="keyword">chmod</span> g+<span class="keyword">s</span> /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的 </span><br><span class="line"><span class="keyword">chmod</span> g-<span class="keyword">s</span> /home/public 禁用一个目录的 SGID 位 </span><br><span class="line"><span class="keyword">chmod</span> o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件 </span><br><span class="line"><span class="keyword">chmod</span> o-t /home/public 禁用一个目录的 STIKY 位</span><br><span class="line"></span><br></pre></td></tr></table></figure> <hr><p>#文件的特殊属性</p><p>##使用 “+” 设置权限，使用 “-“ 用于取消<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chattr +<span class="selector-tag">a</span> file1 只允许以追加方式读写文件 </span><br><span class="line">chattr +c file1 允许这个文件能被内核自动压缩/解压 </span><br><span class="line">chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件 </span><br><span class="line">chattr +<span class="selector-tag">i</span> file1 设置成不可变的文件，不能被删除、修改、重命名或者链接 </span><br><span class="line">chattr +s file1 允许一个文件被安全地删除 </span><br><span class="line">chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘 </span><br><span class="line">chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件 </span><br><span class="line">lsattr 显示特殊的属性 </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#打包和压缩文件 </p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">bunzip<span class="number">2</span> file<span class="number">1</span>.bz<span class="number">2</span> 解压一个叫做 <span class="string">'file1.bz2'</span>的文件 </span><br><span class="line">bzip<span class="number">2</span> file<span class="number">1</span> 压缩一个叫做 <span class="string">'file1'</span> 的文件 </span><br><span class="line">gunzip file<span class="number">1</span>.gz 解压一个叫做 <span class="string">'file1.gz'</span>的文件 </span><br><span class="line">gzip file<span class="number">1</span> 压缩一个叫做 <span class="string">'file1'</span>的文件 </span><br><span class="line">gzip -<span class="number">9</span> file<span class="number">1</span> 最大程度压缩 </span><br><span class="line">rar a file<span class="number">1</span>.rar test<span class="number">_f</span>ile 创建一个叫做 <span class="string">'file1.rar'</span> 的包 </span><br><span class="line">rar a file<span class="number">1</span>.rar file<span class="number">1</span> file<span class="number">2</span> dir<span class="number">1</span> 同时压缩 <span class="string">'file1'</span>, <span class="string">'file2'</span> 以及目录 <span class="string">'dir1'</span> </span><br><span class="line">rar x file<span class="number">1</span>.rar 解压rar包 </span><br><span class="line">unrar x file<span class="number">1</span>.rar 解压rar包 </span><br><span class="line">tar -cvf archive.tar file<span class="number">1</span> 创建一个非压缩的 tarball </span><br><span class="line">tar -cvf archive.tar file<span class="number">1</span> file<span class="number">2</span> dir<span class="number">1</span> 创建一个包含了 <span class="string">'file1'</span>, <span class="string">'file2'</span> 以及 <span class="string">'dir1'</span>的档案文件 </span><br><span class="line">tar -tf archive.tar 显示一个包中的内容 </span><br><span class="line">tar -xvf archive.tar 释放一个包 </span><br><span class="line">tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下 </span><br><span class="line">tar -cvfj archive.tar.bz<span class="number">2</span> dir<span class="number">1</span> 创建一个bzip<span class="number">2</span>格式的压缩包 </span><br><span class="line">tar -xvfj archive.tar.bz<span class="number">2</span> 解压一个bzip<span class="number">2</span>格式的压缩包 </span><br><span class="line">tar -cvfz archive.tar.gz dir<span class="number">1</span> 创建一个gzip格式的压缩包 </span><br><span class="line">tar -xvfz archive.tar.gz 解压一个gzip格式的压缩包 </span><br><span class="line">zip file<span class="number">1</span>.zip file<span class="number">1</span> 创建一个zip格式的压缩包 </span><br><span class="line">zip -r file<span class="number">1</span>.zip file<span class="number">1</span> file<span class="number">2</span> dir<span class="number">1</span> 将几个文件和目录同时压缩成一个zip格式的压缩包 </span><br><span class="line">unzip file<span class="number">1</span>.zip 解压一个zip格式压缩包 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RPM 包 - （Fedora, Redhat及类似系统） </span><br><span class="line">rpm -ivh <span class="keyword">package</span>.rpm 安装一个rpm包 </span><br><span class="line">rpm -ivh --nodeeps <span class="keyword">package</span>.rpm 安装一个rpm包而忽略依赖关系警告 </span><br><span class="line">rpm -U <span class="keyword">package</span>.rpm 更新一个rpm包但不改变其配置文件 </span><br><span class="line">rpm -F <span class="keyword">package</span>.rpm 更新一个确定已经安装的rpm包 </span><br><span class="line">rpm -e <span class="keyword">package</span><span class="number">_n</span>ame.rpm 删除一个rpm包 </span><br><span class="line">rpm -qa 显示系统中所有已经安装的rpm包 </span><br><span class="line">rpm -qa | grep httpd 显示所有名称中包含 <span class="string">"httpd"</span> 字样的rpm包 </span><br><span class="line">rpm -qi <span class="keyword">package</span><span class="number">_n</span>ame 获取一个已安装包的特殊信息 </span><br><span class="line">rpm -qg <span class="string">"System Environment/Daemons"</span> 显示一个组件的rpm包 </span><br><span class="line">rpm -ql <span class="keyword">package</span><span class="number">_n</span>ame 显示一个已经安装的rpm包提供的文件列表 </span><br><span class="line">rpm -qc <span class="keyword">package</span><span class="number">_n</span>ame 显示一个已经安装的rpm包提供的配置文件列表 </span><br><span class="line">rpm -q <span class="keyword">package</span><span class="number">_n</span>ame --whatrequires 显示与一个rpm包存在依赖关系的列表 </span><br><span class="line">rpm -q <span class="keyword">package</span><span class="number">_n</span>ame --whatprovides 显示一个rpm包所占的体积 </span><br><span class="line">rpm -q <span class="keyword">package</span><span class="number">_n</span>ame --scripts 显示在安装/删除期间所执行的脚本l </span><br><span class="line">rpm -q <span class="keyword">package</span><span class="number">_n</span>ame --changelog 显示一个rpm包的修改历史 </span><br><span class="line">rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供 </span><br><span class="line">rpm -qp <span class="keyword">package</span>.rpm -l 显示由一个尚未安装的rpm包提供的文件列表 </span><br><span class="line">rpm --<span class="keyword">import</span> /media/cdrom/RPM-GPG-KEY 导入公钥数字证书 </span><br><span class="line">rpm --checksig <span class="keyword">package</span>.rpm 确认一个rpm包的完整性 </span><br><span class="line">rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性 </span><br><span class="line">rpm -V <span class="keyword">package</span><span class="number">_n</span>ame 检查文件尺寸、 许可、类型、所有者、群组、MD<span class="number">5</span>检查以及最后修改时间 </span><br><span class="line">rpm -Va 检查系统中所有已安装的rpm包- 小心使用 </span><br><span class="line">rpm -Vp <span class="keyword">package</span>.rpm 确认一个rpm包还未安装 </span><br><span class="line">rpm<span class="number">2</span>cpio <span class="keyword">package</span>.rpm | cpio --extract --make-directories *bin* 从一个rpm包运行可执行文件 </span><br><span class="line">rpm -ivh /usr/src/redhat/RPMS/`arch`/<span class="keyword">package</span>.rpm 从一个rpm源码安装一个构建好的包 </span><br><span class="line">rpmbuild --rebuild <span class="keyword">package</span><span class="number">_n</span>ame.src.rpm 从一个rpm源码构建一个 rpm 包 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">YUM 软件包升级器 - （Fedora, RedHat及类似系统） </span><br><span class="line">yum install <span class="keyword">package</span><span class="number">_n</span>ame 下载并安装一个rpm包 </span><br><span class="line">yum localinstall <span class="keyword">package</span><span class="number">_n</span>ame.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 </span><br><span class="line">yum update <span class="keyword">package</span><span class="number">_n</span>ame.rpm 更新当前系统中所有安装的rpm包 </span><br><span class="line">yum update <span class="keyword">package</span><span class="number">_n</span>ame 更新一个rpm包 </span><br><span class="line">yum remove <span class="keyword">package</span><span class="number">_n</span>ame 删除一个rpm包 </span><br><span class="line">yum list 列出当前系统中安装的所有包 </span><br><span class="line">yum search <span class="keyword">package</span><span class="number">_n</span>ame 在rpm仓库中搜寻软件包 </span><br><span class="line">yum clean packages 清理rpm缓存删除下载的包 </span><br><span class="line">yum clean headers 删除所有头文件 </span><br><span class="line">yum clean all 删除所有缓存的包和头文件 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DEB 包 (Debian, Ubuntu 以及类似系统) </span><br><span class="line">dpkg -i <span class="keyword">package</span>.deb 安装/更新一个 deb 包 </span><br><span class="line">dpkg -r <span class="keyword">package</span><span class="number">_n</span>ame 从系统删除一个 deb 包 </span><br><span class="line">dpkg -l 显示系统中所有已经安装的 deb 包 </span><br><span class="line">dpkg -l | grep httpd 显示所有名称中包含 <span class="string">"httpd"</span> 字样的deb包 </span><br><span class="line">dpkg -s <span class="keyword">package</span><span class="number">_n</span>ame 获得已经安装在系统中一个特殊包的信息 </span><br><span class="line">dpkg -L <span class="keyword">package</span><span class="number">_n</span>ame 显示系统中已经安装的一个deb包所提供的文件列表 </span><br><span class="line">dpkg --contents <span class="keyword">package</span>.deb 显示尚未安装的一个包所提供的文件列表 </span><br><span class="line">dpkg -S /bin/ping 确认所给的文件由哪个deb包提供 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">APT 软件工具 (Debian, Ubuntu 以及类似系统) </span><br><span class="line">apt-get install <span class="keyword">package</span><span class="number">_n</span>ame 安装/更新一个 deb 包 </span><br><span class="line">apt-cdrom install <span class="keyword">package</span><span class="number">_n</span>ame 从光盘安装/更新一个 deb 包 </span><br><span class="line">apt-get update 升级列表中的软件包 </span><br><span class="line">apt-get upgrade 升级所有已安装的软件 </span><br><span class="line">apt-get remove <span class="keyword">package</span><span class="number">_n</span>ame 从系统删除一个deb包 </span><br><span class="line">apt-get check 确认依赖的软件仓库正确 </span><br><span class="line">apt-get clean 从下载的软件包中清理缓存 </span><br><span class="line">apt-cache search searched-<span class="keyword">package</span> 返回包含所要搜索字符串的软件包名称 </span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>#查看文件内容 </p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> file1 从第一个字节开始正向查看文件的内容 </span><br><span class="line">tac file1 从最后一行开始反向查看一个文件的内容 </span><br><span class="line"><span class="keyword">more</span> file1 查看一个长文件的内容 </span><br><span class="line">less file1 类似于 '<span class="keyword">more</span>' 命令，但是它允许在文件中和正向操作一样的反向操作 </span><br><span class="line">head -2 file1 查看一个文件的前两行 </span><br><span class="line">tail -2 file1 查看一个文件的最后两行 </span><br><span class="line">tail -f /<span class="keyword">var</span>/<span class="keyword">log</span>/messages 实时查看被添加到一个文件中的内容 </span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>#文本处理<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> file1 file2 ... | <span class="keyword">command</span> &lt;&gt; file1_in.txt_or_file1_out.txt general <span class="keyword">syntax</span> <span class="keyword">for</span> text manipulation using PIPE, STDIN <span class="built_in">and</span> STDOUT </span><br><span class="line"><span class="keyword">cat</span> file1 | <span class="keyword">command</span>( sed, <span class="keyword">grep</span>, awk, <span class="keyword">grep</span>, etc...) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中 </span><br><span class="line"><span class="keyword">cat</span> file1 | <span class="keyword">command</span>( sed, <span class="keyword">grep</span>, awk, <span class="keyword">grep</span>, etc...) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中 </span><br><span class="line"><span class="keyword">grep</span> Aug /var/<span class="built_in">log</span>/<span class="keyword">messages</span> 在文件 <span class="string">'/var/log/messages'</span>中查找关键词<span class="string">"Aug"</span> </span><br><span class="line"><span class="keyword">grep</span> ^Aug /var/<span class="built_in">log</span>/<span class="keyword">messages</span> 在文件 <span class="string">'/var/log/messages'</span>中查找以<span class="string">"Aug"</span>开始的词汇 </span><br><span class="line"><span class="keyword">grep</span> [<span class="number">0</span>-<span class="number">9</span>] /var/<span class="built_in">log</span>/<span class="keyword">messages</span> 选择 <span class="string">'/var/log/messages'</span> 文件中所有包含数字的行 </span><br><span class="line"><span class="keyword">grep</span> Aug -R /var/<span class="built_in">log</span>/* 在目录 <span class="string">'/var/log'</span> 及随后的目录中搜索字符串<span class="string">"Aug"</span> </span><br><span class="line">sed <span class="string">'s/stringa1/stringa2/g'</span> example.txt 将example.txt文件中的 <span class="string">"string1"</span> 替换成 <span class="string">"string2"</span> </span><br><span class="line">sed <span class="string">'/^$/d'</span> example.txt 从example.txt文件中删除所有空白行 </span><br><span class="line">sed <span class="string">'/ *#/d; /^$/d'</span> example.txt 从example.txt文件中删除所有注释和空白行 </span><br><span class="line"><span class="keyword">echo</span> <span class="string">'esempio'</span> | <span class="keyword">tr</span> <span class="string">'[:lower:]'</span> <span class="string">'[:upper:]'</span> 合并上下单元格内容 </span><br><span class="line">sed -<span class="keyword">e</span> <span class="string">'1d'</span> result.txt 从文件example.txt 中排除第一行 </span><br><span class="line">sed -n <span class="string">'/stringa1/p'</span> 查看只包含词汇 <span class="string">"string1"</span>的行 </span><br><span class="line">sed -<span class="keyword">e</span> <span class="string">'s/ *$//'</span> example.txt 删除每一行最后的空白字符 </span><br><span class="line">sed -<span class="keyword">e</span> <span class="string">'s/stringa1//g'</span> example.txt 从文档中只删除词汇 <span class="string">"string1"</span> 并保留剩余全部 </span><br><span class="line">sed -n <span class="string">'1,5p;5q'</span> example.txt 查看从第一行到第<span class="number">5</span>行内容 </span><br><span class="line">sed -n <span class="string">'5p;5q'</span> example.txt 查看第<span class="number">5</span>行 </span><br><span class="line">sed -<span class="keyword">e</span> <span class="string">'s/00*/0/g'</span> example.txt 用单个零替换多个零 </span><br><span class="line"><span class="keyword">cat</span> -n file1 标示文件的行数 </span><br><span class="line"><span class="keyword">cat</span> example.txt | awk <span class="string">'NR%2==1'</span> 删除example.txt文件中的所有偶数行 </span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">a</span> <span class="keyword">b</span> <span class="keyword">c</span> | awk <span class="string">'&#123;print $1&#125;'</span> 查看一行第一栏 </span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">a</span> <span class="keyword">b</span> <span class="keyword">c</span> | awk <span class="string">'&#123;print $1,$3&#125;'</span> 查看一行的第一和第三栏 </span><br><span class="line">paste file1 file2 合并两个文件或两栏的内容 </span><br><span class="line">paste -d <span class="string">'+'</span> file1 file2 合并两个文件或两栏的内容，中间用<span class="string">"+"</span>区分 </span><br><span class="line"><span class="keyword">sort</span> file1 file2 排序两个文件的内容 </span><br><span class="line"><span class="keyword">sort</span> file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份) </span><br><span class="line"><span class="keyword">sort</span> file1 file2 | uniq -<span class="keyword">u</span> 删除交集，留下其他的行 </span><br><span class="line"><span class="keyword">sort</span> file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件) </span><br><span class="line">comm -<span class="number">1</span> file1 file2 比较两个文件的内容只删除 <span class="string">'file1'</span> 所包含的内容 </span><br><span class="line">comm -<span class="number">2</span> file1 file2 比较两个文件的内容只删除 <span class="string">'file2'</span> 所包含的内容 </span><br><span class="line">comm -<span class="number">3</span> file1 file2 比较两个文件的内容只删除两个文件共有的部分 </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#字符设置和文件格式转换<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX </span><br><span class="line">unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS </span><br><span class="line"><span class="keyword">recode</span> ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html </span><br><span class="line"><span class="keyword">recode</span> -<span class="keyword">l</span> | <span class="keyword">more</span> 显示所有允许的转换格式 </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#文件系统分析<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">badblocks -v <span class="meta-keyword">/dev/</span>hda1 检查磁盘hda1上的坏磁块 </span><br><span class="line">fsck <span class="meta-keyword">/dev/</span>hda1 修复/检查hda1磁盘上linux文件系统的完整性 </span><br><span class="line">fsck.ext2 <span class="meta-keyword">/dev/</span>hda1 修复/检查hda1磁盘上ext2文件系统的完整性 </span><br><span class="line">e2fsck <span class="meta-keyword">/dev/</span>hda1 修复/检查hda1磁盘上ext2文件系统的完整性 </span><br><span class="line">e2fsck -j <span class="meta-keyword">/dev/</span>hda1 修复/检查hda1磁盘上ext3文件系统的完整性 </span><br><span class="line">fsck.ext3 <span class="meta-keyword">/dev/</span>hda1 修复/检查hda1磁盘上ext3文件系统的完整性 </span><br><span class="line">fsck.vfat <span class="meta-keyword">/dev/</span>hda1 修复/检查hda1磁盘上fat文件系统的完整性 </span><br><span class="line">fsck.msdos <span class="meta-keyword">/dev/</span>hda1 修复/检查hda1磁盘上dos文件系统的完整性 </span><br><span class="line">dosfsck <span class="meta-keyword">/dev/</span>hda1 修复/检查hda1磁盘上dos文件系统的完整性 </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#初始化一个文件系统<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkfs <span class="regexp">/dev/</span>hda1 在hda1分区创建一个文件系统 </span><br><span class="line">mke2fs <span class="regexp">/dev/</span>hda1 在hda1分区创建一个linux ext2的文件系统 </span><br><span class="line">mke2fs -j <span class="regexp">/dev/</span>hda1 在hda1分区创建一个linux ext3(日志型)的文件系统 </span><br><span class="line">mkfs -t vfat <span class="number">32</span> -F <span class="regexp">/dev/</span>hda1 创建一个 FAT32 文件系统 </span><br><span class="line">fdformat -n <span class="regexp">/dev/</span>fd0 格式化一个软盘 </span><br><span class="line">mkswap <span class="regexp">/dev/</span>hda3 创建一个swap文件系统 </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#SWAP文件系统<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkswap <span class="regexp">/dev/</span>hda3 创建一个swap文件系统 </span><br><span class="line">swapon <span class="regexp">/dev/</span>hda3 启用一个新的swap文件系统 </span><br><span class="line">swapon <span class="regexp">/dev/</span>hda2 <span class="regexp">/dev/</span>hdb3 启用两个swap分区 </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#备份<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">dump -0aj -f <span class="string">/tmp/home0.bak</span> <span class="string">/home</span> 制作一个 '<span class="string">/home</span>' 目录的完整备份 </span><br><span class="line">dump -1aj -f <span class="string">/tmp/home0.bak</span> <span class="string">/home</span> 制作一个 '<span class="string">/home</span>' 目录的交互式备份 </span><br><span class="line">restore -if <span class="string">/tmp/home0.bak</span> 还原一个交互式备份 </span><br><span class="line">rsync -rogpav <span class="params">--delete</span> <span class="string">/home</span> <span class="string">/tmp</span> 同步两边的目录 </span><br><span class="line">rsync -rogpav -e ssh <span class="params">--delete</span> <span class="string">/home</span> ip_address:<span class="string">/tmp</span> 通过SSH通道rsync </span><br><span class="line">rsync -az -e ssh <span class="params">--delete</span> ip_addr:<span class="string">/home/public</span> <span class="string">/home/local</span> 通过ssh和压缩将一个远程目录同步到本地目录 </span><br><span class="line">rsync -az -e ssh <span class="params">--delete</span> <span class="string">/home/local</span> ip_addr:<span class="string">/home/public</span> 通过ssh和压缩将本地目录同步到远程目录 </span><br><span class="line">dd bs=1M <span class="keyword">if</span>=<span class="string">/dev/hda</span> | gzip | ssh user@ip_addr 'dd of=hda.gz' 通过ssh在远程主机上执行一次备份本地磁盘的操作 </span><br><span class="line">dd <span class="keyword">if</span>=<span class="string">/dev/sda</span> of=<span class="string">/tmp/file1</span> 备份磁盘内容到一个文件 </span><br><span class="line">tar -Puf backup.tar <span class="string">/home/user</span> 执行一次对 '<span class="string">/home/user</span>' 目录的交互式备份操作 </span><br><span class="line"><span class="params">( cd /tmp/local/ &amp;&amp; tar c . )</span> | ssh -C user@ip_addr '<span class="keyword">cd</span> <span class="string">/home/share/</span> &amp;&amp; tar x -p' 通过ssh在远程目录中复制一个目录内容 </span><br><span class="line"><span class="params">( tar c /home )</span> | ssh -C user@ip_addr '<span class="keyword">cd</span> <span class="string">/home/backup-home</span> &amp;&amp; tar x -p' 通过ssh在远程目录中复制一个本地目录 </span><br><span class="line">tar cf - . | <span class="params">(cd /tmp/backup ; tar xf - )</span> 本地将一个目录复制到另一个地方，保留原有权限及链接 </span><br><span class="line">find <span class="string">/home/user1</span> -name '*<span class="string">.txt</span>' | xargs cp -av <span class="params">--target-directory=/home/backup/</span> <span class="params">--parents</span> 从一个目录查找并复制所有以 '<span class="string">.txt</span>' 结尾的文件到另一个目录 </span><br><span class="line">find <span class="string">/var/log</span> -name '*<span class="string">.log</span>' | tar cv <span class="params">--files-from=-</span> | bzip2 &gt; log.tar.bz2 查找所有以 '<span class="string">.log</span>' 结尾的文件并做成一个bzip包 </span><br><span class="line">dd <span class="keyword">if</span>=<span class="string">/dev/hda</span> of=<span class="string">/dev/fd0</span> bs=512 count=1 做一个将 MBR <span class="params">(Master Boot Record)</span>内容复制到软盘的动作 </span><br><span class="line">dd <span class="keyword">if</span>=<span class="string">/dev/fd0</span> of=<span class="string">/dev/hda</span> bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容 </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#光盘<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">cdrecord -v gracetime=2 dev=<span class="string">/dev/cdrom</span> -eject blank=fast -force 清空一个可复写的光盘内容 </span><br><span class="line">mkisofs <span class="string">/dev/cdrom</span> &gt; <span class="keyword">cd</span>.iso 在磁盘上创建一个光盘的iso镜像文件 </span><br><span class="line">mkisofs <span class="string">/dev/cdrom</span> | gzip &gt; <span class="keyword">cd</span>_iso.gz 在磁盘上创建一个压缩了的光盘iso镜像文件 </span><br><span class="line">mkisofs -J -allow-leading-dots -R -V <span class="string">"Label CD"</span> -iso-level 4 -o <span class="string">./cd.iso</span> data_<span class="keyword">cd</span> 创建一个目录的iso镜像文件 </span><br><span class="line">cdrecord -v dev=<span class="string">/dev/cdrom</span> <span class="keyword">cd</span>.iso 刻录一个ISO镜像文件 </span><br><span class="line">gzip -dc <span class="keyword">cd</span>_iso.gz | cdrecord dev=<span class="string">/dev/cdrom</span> - 刻录一个压缩了的ISO镜像文件 </span><br><span class="line">mount -o loop <span class="keyword">cd</span>.iso <span class="string">/mnt/iso</span> 挂载一个ISO镜像文件 </span><br><span class="line">cd-paranoia -B 从一个CD光盘转录音轨到 wav 文件中 </span><br><span class="line">cd-paranoia -- <span class="string">"-3"</span> 从一个CD光盘转录音轨到 wav 文件中（参数-3） </span><br><span class="line">cdrecord <span class="params">--scanbus</span> 扫描总线以识别scsi通道 </span><br><span class="line">dd <span class="keyword">if</span>=<span class="string">/dev/hdc</span> | md5sum 校验一个设备的md5sum编码，例如一张 CD </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><hr><p>#网络 - （以太网和WIFI无线）<br><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">ifconfig eth0 显示一个以太网卡的配置 </span><br><span class="line">ifup eth0 启用一个 <span class="string">'eth0'</span> 网络设备 </span><br><span class="line">ifdown eth0 禁用一个 <span class="string">'eth0'</span> 网络设备 </span><br><span class="line">ifconfig eth0 <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> 控制IP地址 </span><br><span class="line">ifconfig eth0 promisc 设置 <span class="string">'eth0'</span> 成混杂模式以嗅探数据包 (sniffing) </span><br><span class="line">dhclient eth0 以dhcp模式启用 <span class="string">'eth0'</span> </span><br><span class="line">route -n show routing table </span><br><span class="line">route add -net <span class="number">0</span>/<span class="number">0</span> gw IP_Gateway configura default gateway </span><br><span class="line">route add -net <span class="number">192.168</span><span class="number">.0</span><span class="number">.0</span> netmask <span class="number">255.255</span><span class="number">.0</span><span class="number">.0</span> gw <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> configure static route to reach network <span class="string">'192.168.0.0/16'</span> </span><br><span class="line">route del <span class="number">0</span>/<span class="number">0</span> gw IP_gateway remove static route </span><br><span class="line">echo <span class="string">"1"</span> &gt; /<span class="keyword">proc</span>/sys/net/ipv4/ip_forward<span class="title"> activate</span> ip<span class="title"> routing</span> </span><br><span class="line">hostname<span class="title"> show</span> hostname<span class="title"> of</span> system </span><br><span class="line">host<span class="title"> www.example.com</span> lookup<span class="title"> hostname</span> to<span class="title"> resolve</span> name<span class="title"> to</span> ip<span class="title"> address</span> and<span class="title"> viceversa(1)</span> </span><br><span class="line">nslookup<span class="title"> www.example.com</span> lookup<span class="title"> hostname</span> to<span class="title"> resolve</span> name<span class="title"> to</span> ip<span class="title"> address</span> and<span class="title"> viceversa(2)</span> </span><br><span class="line">ip<span class="title"> link</span> show<span class="title"> show</span> link<span class="title"> status</span> of<span class="title"> all</span> interfaces </span><br><span class="line">mii-tool<span class="title"> eth0</span> show<span class="title"> link</span> status<span class="title"> of</span> 'eth0' </span><br><span class="line">ethtool<span class="title"> eth0</span> show<span class="title"> statistics</span> of<span class="title"> network</span> card 'eth0' </span><br><span class="line">netstat -tup<span class="title"> show</span> all<span class="title"> active</span> network<span class="title"> connections</span> and<span class="title"> their</span> PID </span><br><span class="line">netstat -tupl<span class="title"> show</span> all<span class="title"> network</span> services<span class="title"> listening</span> on<span class="title"> the</span> system<span class="title"> and</span> their<span class="title"> PID</span> </span><br><span class="line">tcpdump<span class="title"> tcp</span> port 80<span class="title"> show</span> all<span class="title"> HTTP</span> traffic </span><br><span class="line">iwlist<span class="title"> scan</span> show<span class="title"> wireless</span> networks </span><br><span class="line">iwconfig<span class="title"> eth1</span> show<span class="title"> configuration</span> of<span class="title"> a</span> wireless<span class="title"> network</span> card </span><br><span class="line">hostname<span class="title"> show</span> hostname </span><br><span class="line">host<span class="title"> www.example.com</span> lookup<span class="title"> hostname</span> to<span class="title"> resolve</span> name<span class="title"> to</span> ip<span class="title"> address</span> and<span class="title"> viceversa</span> </span><br><span class="line">nslookup<span class="title"> www.example.com</span> lookup<span class="title"> hostname</span> to<span class="title"> resolve</span> name<span class="title"> to</span> ip<span class="title"> address</span> and<span class="title"> viceversa</span> </span><br><span class="line">whois<span class="title"> www.example.com</span> lookup<span class="title"> on</span> Whois<span class="title"> database</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 速查手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>（一）Hadoop 安装部署</title>
      <link href="/zh-Hans/2018-06-05-%EF%BC%88%E4%B8%80%EF%BC%89hadoop-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2.html"/>
      <url>/zh-Hans/2018-06-05-%EF%BC%88%E4%B8%80%EF%BC%89hadoop-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2.html</url>
      <content type="html"><![CDATA[<h1 id="部署环境说明"><a href="#部署环境说明" class="headerlink" title="部署环境说明"></a>部署环境说明</h1><ul><li>安装系统环境： centos7.4</li><li>hadoop版本：hadoop-2.6.0-cdh5.7.0</li><li>单主机伪分布式环境</li><li>官网文档地址：<a href="http://archive.cloudera.com/cdh5/cdh/5/hadoop/hadoop-project-dist/hadoop-common/SingleCluster.html" target="_blank" rel="noopener">hadoop单主机安装</a></li></ul><hr><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><hr><h2 id="1-安装配置jdk环境"><a href="#1-安装配置jdk环境" class="headerlink" title="1. 安装配置jdk环境"></a>1. 安装配置jdk环境</h2><ul><li>查看预装jdk信息： <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">list</span> installed | <span class="keyword">grep</span> jdk</span><br></pre></td></tr></table></figure>所得结果如下：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">copy-jdk-configs<span class="selector-class">.noarch</span>                 <span class="number">3.3</span>-<span class="number">10</span><span class="selector-class">.el7_5</span>              @updates </span><br><span class="line">  java-<span class="number">1.7</span>.<span class="number">0</span>-openjdk<span class="selector-class">.x86_64</span>               <span class="number">1</span>:<span class="number">1.7</span>.<span class="number">0.181</span>-<span class="number">2.6</span>.<span class="number">14.8</span><span class="selector-class">.el7_5</span>     @updates </span><br><span class="line">  java-<span class="number">1.7</span>.<span class="number">0</span>-openjdk-headless<span class="selector-class">.x86_64</span>      <span class="number">1</span>:<span class="number">1.7</span>.<span class="number">0.181</span>-<span class="number">2.6</span>.<span class="number">14.8</span><span class="selector-class">.el7_5</span>     @updates </span><br><span class="line">  java-<span class="number">1.8</span>.<span class="number">0</span>-openjdk<span class="selector-class">.x86_64</span>               <span class="number">1</span>:<span class="number">1.8</span>.<span class="number">0.171</span>-<span class="number">8</span><span class="selector-class">.b10</span><span class="selector-class">.el7_5</span>        @updates </span><br><span class="line">  java-<span class="number">1.8</span>.<span class="number">0</span>-openjdk-headless<span class="selector-class">.x86_64</span>      <span class="number">1</span>:<span class="number">1.8</span>.<span class="number">0.171</span>-<span class="number">8</span><span class="selector-class">.b10</span><span class="selector-class">.el7_5</span>        @updates</span><br></pre></td></tr></table></figure></li></ul><ul><li>卸载预装jdk：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">-y</span> <span class="selector-tag">remove</span> <span class="selector-tag">java-1</span><span class="selector-class">.7</span><span class="selector-class">.0-openjdk</span>*</span><br><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">-y</span> <span class="selector-tag">remove</span> <span class="selector-tag">java-1</span><span class="selector-class">.8</span><span class="selector-class">.0-openjdk</span>*</span><br></pre></td></tr></table></figure></li><li>安装openjdk1.8<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">-y</span> <span class="selector-tag">install</span> <span class="selector-tag">java-1</span><span class="selector-class">.8</span><span class="selector-class">.0-openjdk</span>*</span><br></pre></td></tr></table></figure></li><li>配置java环境变量<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=<span class="regexp">/usr/lib</span><span class="regexp">/jvm/java</span>-<span class="number">1.8</span>.<span class="number">0</span></span><br><span class="line">export PATH=$JAVA_HOME/<span class="symbol">bin:</span>$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/<span class="class"><span class="keyword">lib</span>/<span class="title">dt</span>.<span class="title">jar</span>:$<span class="title">JAVA_HOME</span>/<span class="title">lib</span>/<span class="title">tools</span>.<span class="title">jar</span></span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="2-配置ssh免密登陆"><a href="#2-配置ssh免密登陆" class="headerlink" title="2.配置ssh免密登陆"></a>2.配置ssh免密登陆</h2><ul><li>安装ssh服务（如果没有安装，centos默认安装了）<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> openssh-<span class="keyword">server</span> -y</span><br></pre></td></tr></table></figure></li><li>生成key（一路回车到结束，记住生成的目录，我的生成目录为/root/.ssh/id_rsa）<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh-keygen -t rsa</span></span><br></pre></td></tr></table></figure></li><li>跳转到生成的key目录<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/root/.ssh</span></span><br></pre></td></tr></table></figure></li><li>拷贝id_rsa.pub<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ~<span class="regexp">/.ssh/i</span>d_rsa.pub ~<span class="regexp">/.ssh/</span>authorized_keys</span><br></pre></td></tr></table></figure></li><li>验证本地免密登陆是否成功<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh localhost</span></span><br></pre></td></tr></table></figure>或 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh</span> 172<span class="selector-class">.168</span><span class="selector-class">.4</span><span class="selector-class">.44</span></span><br></pre></td></tr></table></figure>（上面ip为服务器ip）</li></ul><hr><h2 id="3-下载安装hadoop"><a href="#3-下载安装hadoop" class="headerlink" title="3.下载安装hadoop"></a>3.下载安装hadoop</h2><h3 id="3-1下载并解压-hadoop-2-6-0-cdh5-7-0"><a href="#3-1下载并解压-hadoop-2-6-0-cdh5-7-0" class="headerlink" title="3.1下载并解压 hadoop-2.6.0-cdh5.7.0"></a>3.1下载并解压 hadoop-2.6.0-cdh5.7.0</h3>  <figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">wget http://archive.cloudera.com/cdh5/<span class="number">cdh</span>/<span class="number">5</span>/hadoop-<span class="number">2.6</span><span class="meta">.0</span>-cdh5<span class="meta">.7</span><span class="meta">.0</span>.tar.gz</span><br><span class="line">tar -zxvf hadoop-<span class="number">2.6</span><span class="meta">.0</span>-cdh5<span class="meta">.7</span><span class="meta">.0</span>.tar.gz -C /opt</span><br></pre></td></tr></table></figure><h3 id="3-2-修改配置文件-基于hadoop-home目录"><a href="#3-2-修改配置文件-基于hadoop-home目录" class="headerlink" title="3.2 修改配置文件(基于hadoop_home目录)"></a>3.2 修改配置文件(基于hadoop_home目录)</h3><ul><li><p>目录etc/hadoop/hadoop-env.sh:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改<span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=<span class="variable">$&#123;JAVA_HOME&#125;</span></span><br><span class="line">为<span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/lib/jvm/java-1.8.0</span><br></pre></td></tr></table></figure></li><li><p>目录etc/hadoop/core-site.xml:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">&lt;configuration&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>fs.defaultFS<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span>hdfs:<span class="comment">//localhost:8020&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">        <span class="params">&lt;name&gt;</span>hadoop.tmp.dir<span class="params">&lt;/name&gt;</span></span><br><span class="line">        <span class="params">&lt;value&gt;</span><span class="meta-keyword">/home/</span>mm/tmp<span class="params">&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line"><span class="params">&lt;/configuration&gt;</span></span><br></pre></td></tr></table></figure></li><li>目录etc/hadoop/hdfs-site.xml:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-启动hdfs"><a href="#3-3-启动hdfs" class="headerlink" title="3.3 启动hdfs"></a>3.3 启动hdfs</h3>说明：下列命令执行均在hadoop安装目录下</li><li>格式化文件系统(仅安装部署时的第一次执行)：<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bin/hdfs </span>namenode -format</span><br></pre></td></tr></table></figure></li><li>启动hdfs<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/<span class="literal">start</span>-dfs.sh</span><br></pre></td></tr></table></figure><h3 id="3-4验证是否成功启动"><a href="#3-4验证是否成功启动" class="headerlink" title="3.4验证是否成功启动"></a>3.4验证是否成功启动</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">jps</span> </span><br></pre></td></tr></table></figure>命令结果如下：<br>84865 DataNode<br>85043 SecondaryNameNode<br>84740 NameNode<br>85244 Jps<br>也可以使用浏览器访问localhost:50070<h3 id="3-5停止hdfs"><a href="#3-5停止hdfs" class="headerlink" title="3.5停止hdfs"></a>3.5停止hdfs</h3></li><li>命令<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/<span class="keyword">stop</span>-dfs.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> 大数据技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Markdown 语法说明</title>
      <link href="/zh-Hans/2018-05-23-Markdown-%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E.html"/>
      <url>/zh-Hans/2018-05-23-Markdown-%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E.html</url>
      <content type="html"><![CDATA[<h2 id="overview">概述</h2><h3 id="philosophy">宗旨</h3><p>Markdown 的目标是实现「易读易写」。</p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>、<a href="http://textism.com/tools/textile/" target="_blank" rel="noopener">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="noopener">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html" target="_blank" rel="noopener">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/" target="_blank" rel="noopener">EtText</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p><p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h3 id="html">兼容 HTML</h3><p>Markdown 语法的目标是：成为一种适用于网络的<em>书写</em>语言。</p><p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想<em>不是</em>要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种<em>发布</em>的格式，Markdown 是一种<em>书写</em>的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML 区块元素――比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <code>&lt;p&gt;</code> 标签。</p><p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p><pre><code>这是一个普通段落。&lt;table&gt;    &lt;tr&gt;        &lt;td&gt;Foo&lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;这是另一个普通段落。</code></pre><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p><p>HTML 的区段（行内）标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p><p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p><h3 id="autoescape">特殊字符自动转换</h3><p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p><p><code>&amp;</code> 字符尤其让网络文档编写者受折磨，如果你要打「<code>AT&amp;T</code>」 ，你必须要写成「<code>AT&amp;amp;T</code>」。而网址中的 <code>&amp;</code> 字符也要转换。比如你要链接到：</p><pre><code>http://images.google.com/images?num=30&amp;q=larry+bird</code></pre><p>你必须要把网址转换写为：</p><pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird</code></pre><p>才能放到链接标签的 <code>href</code> 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 <code>&amp;</code> 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 <code>&amp;amp</code>;。</p><p>所以你如果要在文档中插入一个版权符号 <code>©</code>，你可以这样写：</p><pre><code>&amp;copy;</code></pre><p>Markdown 会保留它不动。而若你写：</p><pre><code>AT&amp;T</code></pre><p>Markdown 就会将它转为：</p><pre><code>AT&amp;amp;T</code></pre><p>类似的状况也会发生在 <code>&lt;</code> 符号上，因为 Markdown 允许 <a href="#html">兼容 HTML</a> ，如果你是把 <code>&lt;</code> 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：</p><pre><code>4 &lt; 5</code></pre><p>Markdown 将会把它转换为：</p><pre><code>4 &amp;lt; 5</code></pre><p>不过需要注意的是，code 范围内，不论是行内还是区块， <code>&lt;</code> 和 <code>&amp;</code> 两个符号都<em>一定</em>会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><hr><h2 id="block">区块元素</h2><h3 id="p">段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 <code>&lt;br /&gt;</code> 标签。</p><p>如果你<em>确实</em>想要依赖 Markdown 来插入 <code>&lt;br /&gt;</code> 标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生 <code>&lt;br /&gt;</code> ，但是简单地「每个换行都转换为 <code>&lt;br /&gt;</code>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 <a href="#blockquote">区块引用</a> 和多段落的 <a href="#list">列表</a> 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h3 id="header">标题</h3><p>Markdown 支持两种标题的语法，类 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a> 和类 <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a> 形式。</p><p>类 Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>-</code> （第二阶标题），例如：</p><pre><code>This is an H1=============This is an H2-------------</code></pre><p>任何数量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 <code>#</code> ，对应到标题 1 到 6 阶，例如：</p><pre><code># 这是 H1## 这是 H2###### 这是 H6</code></pre><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p><pre><code># 这是 H1 ### 这是 H2 ##### 这是 H3 ######</code></pre><h3 id="blockquote">区块引用 Blockquotes</h3><p>Markdown 标记区块引用是使用类似 email 中用 <code>&gt;</code> 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 <code>&gt;</code> ：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&gt; id sem consectetuer libero luctus adipiscing.</code></pre><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 <code>&gt;</code> ：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</code></pre><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 <code>&gt;</code> ：</p><pre><code>&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level.</code></pre><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><pre><code>&gt; ## 这是一个标题。&gt; &gt; 1.   这是第一行列表项。&gt; 2.   这是第二行列表项。&gt; &gt; 给出一些例子代码：&gt; &gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择<em>增加引用阶层</em>。</p><h3 id="list">列表</h3><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号、加号或是减号作为列表标记：</p><pre><code>*   Red*   Green*   Blue</code></pre><p>等同于：</p><pre><code>+   Red+   Green+   Blue</code></pre><p>也等同于：</p><pre><code>-   Red-   Green-   Blue</code></pre><p>有序列表则使用数字接着一个英文句点：</p><pre><code>1.  Bird2.  McHale3.  Parish</code></pre><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p><pre><code>&lt;ol&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;McHale&lt;/li&gt;&lt;li&gt;Parish&lt;/li&gt;&lt;/ol&gt;</code></pre><p>如果你的列表标记写成：</p><pre><code>1.  Bird1.  McHale1.  Parish</code></pre><p>或甚至是：</p><pre><code>3. Bird1. McHale8. Parish</code></pre><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,    viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.    Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>但是如果你懒，那也行：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 <code>&lt;p&gt;</code><br>标签包起来，举例来说：</p><pre><code>*   Bird*   Magic</code></pre><p>会被转换为：</p><pre><code>&lt;ul&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;Magic&lt;/li&gt;&lt;/ul&gt;</code></pre><p>但是这个：</p><pre><code>*   Bird*   Magic</code></pre><p>会被转换为：</p><pre><code>&lt;ul&gt;&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</code></pre><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor    sit amet, consectetuer adipiscing elit. Aliquam hendrerit    mi posuere lectus.    Vestibulum enim wisi, viverra nec, fringilla in, laoreet    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum    sit amet velit.2.  Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><pre><code>*   This is a list item with two paragraphs.    This is the second paragraph in the list item. You&apos;reonly required to indent the first line. Lorem ipsum dolorsit amet, consectetuer adipiscing elit.*   Another item in the same list.</code></pre><p>如果要在列表项目内放进引用，那 <code>&gt;</code> 就需要缩进：</p><pre><code>*   A list item with a blockquote:    &gt; This is a blockquote    &gt; inside a list item.</code></pre><p>如果要放代码区块的话，该区块就需要缩进<em>两次</em>，也就是 8 个空格或是 2 个制表符：</p><pre><code>*   一列表项包含一个列表区块：        &lt;代码写在这&gt;</code></pre><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p><pre><code>1986. What a great season.</code></pre><p>换句话说，也就是在行首出现<em>数字-句点-空白</em>，要避免这样的状况，你可以在句点前面加上反斜杠。</p><pre><code>1986\. What a great season.</code></pre><h3 id="precode">代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。</p><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p><pre><code>这是一个普通段落：    这是一个代码区块。</code></pre><p>Markdown 会转换成：</p><pre><code>&lt;p&gt;这是一个普通段落：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;这是一个代码区块。&lt;/code&gt;&lt;/pre&gt;</code></pre><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><pre><code>Here is an example of AppleScript:    tell application &quot;Foo&quot;        beep    end tell</code></pre><p>会被转换为：</p><pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;    beepend tell&lt;/code&gt;&lt;/pre&gt;</code></pre><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><pre><code>&lt;div class=&quot;footer&quot;&gt;    &amp;copy; 2004 Foo Corporation&lt;/div&gt;</code></pre><p>会被转换为：</p><pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;    &amp;amp;copy; 2004 Foo Corporation&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;</code></pre><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h3 id="hr">分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre><code>* * *********- - ----------------------------------------</code></pre><hr><h2 id="span">区段元素</h2><h3 id="link">链接</h3><p>Markdown 支持两种形式的链接语法： <em>行内式</em>和<em>参考式</em>两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个<em>行内式</em>的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>会产生：</p><pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;an example&lt;/a&gt; inline link.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has notitle attribute.&lt;/p&gt;</code></pre><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><pre><code>See my [About](/about/) page for details.   </code></pre><p><em>参考式</em>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><pre><code>This is [an example][id] reference-style link.</code></pre><p>你也可以选择性地在两个方括号中间加上一个空格：</p><pre><code>This is [an example] [id] reference-style link.</code></pre><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p><pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;</code></pre><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li></ul><p>下面这三种链接的定义都是相同：</p><pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;[foo]: http://example.com/  &apos;Optional Title Here&apos;[foo]: http://example.com/  (Optional Title Here)</code></pre><p><strong>请注意：</strong>有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用尖括号包起来：</p><pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</code></pre><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><pre><code>[id]: http://example.com/longish/path/to/resource/here    &quot;Optional Title Here&quot;</code></pre><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并<em>不</em>区分大小写，因此下面两个链接是一样的：</p><pre><code>[link text][a][link text][A]</code></pre><p><em>隐式链接标记</em>功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><pre><code>[Google][]</code></pre><p>然后定义链接内容：</p><pre><code>[Google]: http://google.com/</code></pre><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p><pre><code>Visit [Daring Fireball][] for more information.</code></pre><p>然后接着定义链接：</p><pre><code>[Daring Fireball]: http://daringfireball.net/</code></pre><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><pre><code>I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].  [1]: http://google.com/        &quot;Google&quot;  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;  [3]: http://search.msn.com/    &quot;MSN Search&quot;</code></pre><p>如果改成用链接名称的方式写：</p><pre><code>I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        &quot;Google&quot;  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</code></pre><p>上面两种写法都会产生下面的 HTML。</p><pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</code></pre><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</code></pre><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h3 id="em">强调</h3><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被转成 <code>&lt;strong&gt;</code>，例如：</p><pre><code>*single asterisks*_single underscores_**double asterisks**__double underscores__</code></pre><p>会转成：</p><pre><code>&lt;em&gt;single asterisks&lt;/em&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;strong&gt;double underscores&lt;/strong&gt;</code></pre><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><pre><code>un*frigging*believable</code></pre><p>但是<strong>如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号</strong>。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><pre><code>\*this text is surrounded by literal asterisks\*</code></pre><h3 id="code">代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（<code>`</code>），例如：</p><pre><code>Use the `printf()` function.</code></pre><p>会产生：</p><pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;</code></pre><p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p><pre><code>``There is a literal backtick (`) here.``</code></pre><p>这段语法会产生：</p><pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;</code></pre><p>代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</p><pre><code>A single backtick in a code span: `` ` ``A backtick-delimited string in a code span: `` `foo` ``</code></pre><p>会产生：</p><pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;</code></pre><p>在代码区段内，<code>&amp;</code> 和尖括号<strong>都</strong>会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</p><pre><code>Please don&apos;t use any `&lt;blink&gt;` tags.</code></pre><p>转为：</p><pre><code>&lt;p&gt;Please don&apos;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;</code></pre><p>你也可以这样写：</p><pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.</code></pre><p>以产生：</p><pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encodedequivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;</code></pre><h3 id="img">图片</h3><p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p><p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： <em>行内式</em>和<em>参考式</em>。</p><p>行内式的图片语法看起来像是：</p><pre><code>![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code></pre><p>详细叙述如下：</p><ul><li>一个惊叹号 <code>!</code></li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上<br>选择性的 ‘title’ 文字。</li></ul><p>参考式的图片语法则长得像这样：</p><pre><code>![Alt text][id]</code></pre><p>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</p><pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;</code></pre><p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。</p><hr><h2 id="misc">其它</h2><h3 id="autolink">自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><pre><code>&lt;http://example.com/&gt;</code></pre><p>Markdown 会转为：</p><pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;</code></pre><p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</p><pre><code>&lt;address@example.com&gt;</code></pre><p>Markdown 会转成：</p><pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</code></pre><p>在浏览器里面，这段字串（其实是 <code>&lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;</code>）会变成一个可以点击的「<a href="mailto:address@example.com" target="_blank" rel="noopener">address@example.com</a>」链接。</p><p>（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</p><h3 id="backslash">反斜杠</h3><p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <code>&lt;em&gt;</code> 标签），你可以在星号的前面加上反斜杠：</p><pre><code>\*literal asterisks\*</code></pre><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre><code>\   反斜线`   反引号*   星号_   底线{}  花括号[]  方括号()  括弧#   井字号+   加号-   减号.   英文句点!   惊叹号</code></pre><hr>]]></content>
      
      <categories>
          
          <category> 快速手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
